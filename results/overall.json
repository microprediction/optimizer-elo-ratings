{"name": ["shgo_slsqp_sobol_cube", "shgo_powell_sobol_cube", "shgo_nelder_sobol_cube", "scipy_slsqp_cube", "scipy_powell_cube", "scipy_lbfgsb_cube", "pysot_ei_cube", "pysot_lcb_cube", "pysot_random_cube", "pysot_srbf_cube", "pysot_dycors_cube", "ax_default_cube", "optuna_cmaes_cube", "optuna_tpe_cube", "optuna_random_cube", "optuna_random_cube_clone", "optuna_random_cube_clone_1", "optuna_random_cube_clone_2", "platypus_genetic_cube", "platypus_evolutionary_cube", "platypus_nsgaii_cube", "platypus_cmaes_cube", "platypus_gde3_cube", "platypus_ibea_cube", "platypus_moead_cube", "platypus_omopso_cube", "platypus_smpso_cube", "platypus_spea2_cube", "platypus_epsmoea_cube", "nevergrad_ngopt_cube", "nevergrad_ngopt4_cube", "nevergrad_de_cube", "nevergrad_portfolio_cube", "nevergrad_oneplus_cube", "nevergrad_hammersley_cube", "nevergrad_ngopt8_cube", "hyperopt_tpe_cube", "hyperopt_atpe_cube", "hyperopt_rand_cube", "pymoo_nelder_cube", "pymoo_nsga3_cube", "pymoo_unsga3_cube", "pymoo_pattern_cube", "pymoo_nsga2_cube", "pymoo_unsga3_cube", "skopt_gp_default_cube", "bayesopt_ucb_cube", "bayesopt_ei_cube", "bayesopt_poi_cube", "nlopt_direct_cube", "nlopt_ags_cube", "nlopt_esch_cube", "nlopt_isres_cube", "nlopt_crs2lm_cube", "nlopt_directr_cube", "nlopt_directo_cube", "nlopt_directl_cube", "bobyqa_default_cube", "bobyqa_noise_cube", "ultraopt_random_cube", "ultraopt_forest_cube", "ultraopt_gbrt_cube", "ultraopt_etpe_cube", "dlib_cube", "dlib_default_cube", "hebo_cube_sequential", "hebo_cube_batch", "hebo_sequential_cube", "hebo_batch_cube"], "count": [181, 177, 202, 665, 93, 235, 585, 592, 574, 604, 594, 467, 555, 972, 929, 1001, 955, 940, 718, 729, 705, 448, 723, 711, 972, 697, 719, 717, 758, 937, 960, 966, 973, 931, 1010, 986, 971, 985, 1011, 783, 1022, 2002, 797, 722, 0, 581, 594, 563, 579, 951, 563, 970, 972, 970, 911, 920, 968, 921, 915, 690, 707, 429, 703, 602, 596, 353, 403, 60, 161], "rating": [2024.929302075295, 2187.1060143791497, 2105.3048568941626, 1527.9328638965387, 1216.6451606680118, 1232.0401202864975, 2242.4143275855645, 2222.345813102237, 1328.6511630423015, 2539.163624421639, 2442.6555595038853, 2285.857667948787, 2043.029763582892, 2167.0690716962763, 1626.7948359496654, 1600, 1600, 1600, 1555.5779000915893, 1381.8895799586066, 1534.0763360028195, 1261.1963073123811, 1227.8184091045941, 1425.1093222199797, 1293.9377253355715, 1635.1405739403892, 1493.5476593180465, 1164.1686105072843, 1675.9008919400635, 2296.057225360291, 2450.0351166904375, 1848.505510793033, 1479.2410329138977, 2513.5256954075953, 1737.0633756685393, 2464.980954851565, 1926.8954811837755, 1860.3456614661436, 1818.4394362514545, 1936.111856558299, 1704.6922591723494, 1700.9733255065123, 2174.804586006757, 1326.968156696757, 1600, 2474.1891149511735, 2454.678590827323, 2451.5518301289603, 2475.4686961777993, 1860.5738110660734, 2279.2666896584738, 1723.7085799173249, 1197.1974460130555, 1404.8081854954194, 2746.116494657246, 1457.141734646986, 1984.8044896918245, 2428.503118951559, 2495.4060035116286, 1375.2673321961531, 2008.2122048874328, 2004.784261435187, 2193.6485672704757, 2391.411355286314, 2443.3429619632175, 2478.7315066681213, 2327.579393042241, 2094.6988533171466, 2124.8349629821114], "traceback": ["passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "Black took 211 function evals when instructed to use 211", "passing", "passing", "passing", "passing", "passing", "Black took 211 function evals when instructed to use 211", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "Black took 551 function evals when instructed to use 551", "Black took 551 function evals when instructed to use 551", "Black took 133 function evals when instructed to use 131", "passing", "not yet run", "Black took 131 function evals when instructed to use 131", "passing", "passing", "passing", "passing", "Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.8.10/x64/lib/python3.8/site-packages/humpday/comparison/eloratings.py\", line 41, in optimizer_game\n    white_best_val, white_best_x, white_feval_count = white(objective, n_trials=n_white_trials, n_dim=n_dim,\n  File \"/opt/hostedtoolcache/Python/3.8.10/x64/lib/python3.8/site-packages/humpday/optimizers/nloptcube.py\", line 43, in nlopt_ags_cube\n    return nlopt_cube_factory(objective=objective,n_trials=n_trials, n_dim=n_dim, with_count=with_count, method='gn_ags')\n  File \"/opt/hostedtoolcache/Python/3.8.10/x64/lib/python3.8/site-packages/humpday/optimizers/nloptcube.py\", line 32, in nlopt_cube_factory\n    best_x = opt.optimize([0.5] * n_dim)\n  File \"/opt/hostedtoolcache/Python/3.8.10/x64/lib/python3.8/site-packages/nlopt/nlopt.py\", line 334, in optimize\n    return _nlopt.opt_optimize(self, *args)\nValueError: nlopt invalid argument\n", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.8.10/x64/lib/python3.8/site-packages/humpday/comparison/eloratings.py\", line 41, in optimizer_game\n    white_best_val, white_best_x, white_feval_count = white(objective, n_trials=n_white_trials, n_dim=n_dim,\n  File \"/opt/hostedtoolcache/Python/3.8.10/x64/lib/python3.8/site-packages/humpday/optimizers/dlibcube.py\", line 33, in dlib_cube\n    return dlib_default_cube(objective=objective, n_trials=n_trials, n_dim=n_dim, with_count=with_count)  # It is useful to have a clone of one of the better algos\n  File \"/opt/hostedtoolcache/Python/3.8.10/x64/lib/python3.8/site-packages/humpday/optimizers/dlibcube.py\", line 28, in dlib_default_cube\n    best_x, best_val = find_min_global(_objective, lb, ub, n_trials)\nRuntimeError: \n\nError detected at line 63.\nError detected in file /tmp/pip-install-1m0fmur8/dlib_5d28f308545942a88f0e93d123a23c74/tools/python/src/global_optimization.cpp.\nError detected in function double call_func(pybind11::object, const dlib::matrix<double, 0, 1>&).\n\nFailing expression was 0 < num && num < 35.\nFunctions being optimized must take between 1 and 35 scalar arguments.\n\n", "passing", "passing", "passing", "passing", "passing"], "active": [true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, true, true]}